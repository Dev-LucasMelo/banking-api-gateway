version: '3.7'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENER_NAMES=PLAINTEXT,CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=teste-cluster
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - banking-api-gateway_kafka_data:/bitnami/kafka
    networks:
      - loomi_network
    mem_limit: 2g  
    cpu_count: 2  

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - loomi_network
    restart: unless-stopped

  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_gateway
    ports:
      - "4000:3000"
    depends_on:
      - redis
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - loomi_network
    restart: unless-stopped

volumes:
  banking-api-gateway_kafka_data:

networks:
  loomi_network:
    external: true 
  